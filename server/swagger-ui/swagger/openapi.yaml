swagger: "2.0"
info:
  title: Baseball Matching
  description: 野球チームのマッチングアプリケーション
  version: "1.0"
host: localhost:8080
consumes:
- application/json
- application/xml
- application/gob
produces:
- application/json
- application/xml
- application/gob
paths:
  /v1/match_recruit/match:
    get:
      tags:
      - MatchRecruit
      summary: List Match Recruitment MatchRecruit
      description: |
        募集中である試合の一覧を返します。

        Required security scopes:
      operationId: MatchRecruit#List Match Recruitment
      parameters:
      - name: Authorization
        in: header
        description: JWT used for Authentication
        required: false
        type: string
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/MatchRecruitBbmatchingMatch_recruitResponseCollection'
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/MatchRecruitListMatchRecruitmentUnauthorizedResponseBody'
      schemes:
      - http
      security:
      - jwt_header_Authorization: []
  /v1/match_recruit/match/{id}:
    get:
      tags:
      - MatchRecruit
      summary: Get Match Recruit MatchRecruit
      description: |
        指定したIDの募集試合を取得

        Required security scopes:
      operationId: MatchRecruit#Get Match Recruit
      produces:
      - application/json; charset=utf-8
      parameters:
      - name: id
        in: path
        description: 募集試合のID
        required: true
        type: integer
      - name: Authorization
        in: header
        description: JWT used for Authentication
        required: false
        type: string
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/MatchRecruitGet Match RecruitResponseBody'
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/MatchRecruitGetMatchRecruitUnauthorizedResponseBody'
      schemes:
      - http
      security:
      - jwt_header_Authorization: []
  /v1/users:
    get:
      tags:
      - User
      summary: List User User
      description: |
        ユーザーの一覧を取得します。

        Required security scopes:
      operationId: User#List User
      parameters:
      - name: Authorization
        in: header
        description: JWT used for Authentication
        required: false
        type: string
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/UserBbmatchingUserResponseCollection'
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/UserListUserUnauthorizedResponseBody'
      schemes:
      - http
      security:
      - jwt_header_Authorization: []
    put:
      tags:
      - User
      summary: Update current user User
      description: |
        現在のセッションに紐づくユーザーの情報を更新します。

        Required security scopes:
      operationId: User#Update current user
      produces:
      - application/json; charset=utf-8
      parameters:
      - name: Authorization
        in: header
        description: JWT used for Authentication
        required: false
        type: string
      - name: Update Current UserRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserUpdateCurrentUserRequestBody'
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/UserUpdate Current UserResponseBody'
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/UserUpdateCurrentUserUnauthorizedResponseBody'
      schemes:
      - http
      security:
      - jwt_header_Authorization: []
    delete:
      tags:
      - User
      summary: Delete current user User
      description: |
        現在のセッションに紐づくユーザーを削除します。

        Required security scopes:
      operationId: User#Delete current user
      parameters:
      - name: Authorization
        in: header
        description: JWT used for Authentication
        required: false
        type: string
      responses:
        "204":
          description: No Content response.
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/UserDeleteCurrentUserUnauthorizedResponseBody'
      schemes:
      - http
      security:
      - jwt_header_Authorization: []
  /v1/users/{user_id}:
    get:
      tags:
      - User
      summary: Get User User
      description: |
        指定したIDのユーザーの情報を取得します。

        Required security scopes:
      operationId: User#Get User
      produces:
      - application/json; charset=utf-8
      parameters:
      - name: user_id
        in: path
        description: firebaseのユーザーID
        required: true
        type: string
        maxLength: 28
        minLength: 28
      - name: Authorization
        in: header
        description: JWT used for Authentication
        required: false
        type: string
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/UserGet UserResponseBody'
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/UserGetUserUnauthorizedResponseBody'
      schemes:
      - http
      security:
      - jwt_header_Authorization: []
  /v1/users/jwt/{user_id}:
    get:
      tags:
      - User
      summary: Get JWT User
      description: 指定したユーザーIDのJWTを取得します
      operationId: User#Get JWT
      parameters:
      - name: user_id
        in: path
        description: firebaseのユーザーID
        required: true
        type: string
        maxLength: 28
        minLength: 28
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/UserGet JWTResponseBody'
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/UserGetJWTUnauthorizedResponseBody'
      schemes:
      - http
  /v1/users/me:
    get:
      tags:
      - User
      summary: Get current user User
      description: |
        現在のエンドポイントに紐づくユーザーの情報を返します。

        Required security scopes:
      operationId: User#Get current user
      produces:
      - application/json; charset=utf-8
      parameters:
      - name: Authorization
        in: header
        description: JWT used for Authentication
        required: false
        type: string
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/UserGet Current UserResponseBody'
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/UserGetCurrentUserUnauthorizedResponseBody'
      schemes:
      - http
      security:
      - jwt_header_Authorization: []
definitions:
  BbmatchingMatch_recruitResponse:
    title: 'Mediatype identifier: application/vnd.bbmatching.match_recruit+json; view=default'
    type: object
    properties:
      comment:
        type: string
        description: 主催チームからのコメント
        example: Consequatur sit deleniti est iusto eum.
      date:
        type: string
        description: 試合が行われる日時
        example: "2020-04-11 10:00:00"
      disabled:
        type: boolean
        description: 試合の募集が終了しているかどうか
        example: true
      location:
        type: string
        description: 試合が行われる場所
        example: 多摩川河川敷
        maxLength: 30
      user_id:
        type: string
        description: FirebaseのユーザーID
        example: XRQ85mtXnINISH25zfM0m5RlC6L2
        minLength: 28
        maxLength: 28
    description: Match Recruitment Response (default view)
    example:
      comment: Ipsam perspiciatis.
      date: "2020-04-11 10:00:00"
      disabled: true
      location: 多摩川河川敷
      user_id: XRQ85mtXnINISH25zfM0m5RlC6L2
    required:
    - user_id
    - location
    - date
    - comment
    - disabled
  BbmatchingUserResponse:
    title: 'Mediatype identifier: application/vnd.bbmatching.user+json; view=default'
    type: object
    properties:
      UserName:
        type: string
        description: チームの表示名
        example: Chunichi Dragons
      email:
        type: string
        description: チームのプライマリメールアドレス
        example: chunichi@example.com
        format: email
      email_verified:
        type: boolean
        description: ユーザーのプライマリメールアドレスが確認されているか。
        example: false
      phoneNumber:
        type: string
        description: チームのメイン電話番号
        example: "+819012345678"
        pattern: ^\+?[\d]{10,}$
      photoURL:
        type: string
        description: チームの写真URL
        example: http://img.com
      user_id:
        type: string
        description: firebaseのユーザーID
        example: XRQ85mtXnINISH25zfM0m5RlC6L2
        minLength: 28
        maxLength: 28
    description: User Response (default view)
    example:
      UserName: Chunichi Dragons
      email: chunichi@example.com
      email_verified: false
      phoneNumber: "+819012345678"
      photoURL: http://img.com
      user_id: XRQ85mtXnINISH25zfM0m5RlC6L2
    required:
    - user_id
    - UserName
    - email
    - phoneNumber
    - photoURL
    - email_verified
  MatchRecruitBbmatchingMatch_recruitResponseCollection:
    title: 'Mediatype identifier: application/vnd.bbmatching.match_recruit+json; type=collection;
      view=default'
    type: array
    items:
      $ref: '#/definitions/BbmatchingMatch_recruitResponse'
    description: List Match RecruitmentResponseBody is the result type for an array
      of BbmatchingMatch_recruitResponse (default view)
    example:
    - comment: Aut saepe cum pariatur.
      date: "2020-04-11 10:00:00"
      disabled: true
      location: 多摩川河川敷
      user_id: XRQ85mtXnINISH25zfM0m5RlC6L2
    - comment: Aut saepe cum pariatur.
      date: "2020-04-11 10:00:00"
      disabled: true
      location: 多摩川河川敷
      user_id: XRQ85mtXnINISH25zfM0m5RlC6L2
    - comment: Aut saepe cum pariatur.
      date: "2020-04-11 10:00:00"
      disabled: true
      location: 多摩川河川敷
      user_id: XRQ85mtXnINISH25zfM0m5RlC6L2
    - comment: Aut saepe cum pariatur.
      date: "2020-04-11 10:00:00"
      disabled: true
      location: 多摩川河川敷
      user_id: XRQ85mtXnINISH25zfM0m5RlC6L2
  MatchRecruitGet Match RecruitResponseBody:
    title: 'Mediatype identifier: application/vnd.bbmatching.match_recruit+json; view=default'
    type: object
    properties:
      comment:
        type: string
        description: 主催チームからのコメント
        example: Sit dolorem repudiandae tempore consequatur est.
      date:
        type: string
        description: 試合が行われる日時
        example: "2020-04-11 10:00:00"
      disabled:
        type: boolean
        description: 試合の募集が終了しているかどうか
        example: true
      location:
        type: string
        description: 試合が行われる場所
        example: 多摩川河川敷
        maxLength: 30
      user_id:
        type: string
        description: FirebaseのユーザーID
        example: XRQ85mtXnINISH25zfM0m5RlC6L2
        minLength: 28
        maxLength: 28
    description: Get Match RecruitResponseBody result type (default view)
    example:
      comment: Illum amet ipsum dolorem.
      date: "2020-04-11 10:00:00"
      disabled: false
      location: 多摩川河川敷
      user_id: XRQ85mtXnINISH25zfM0m5RlC6L2
    required:
    - user_id
    - location
    - date
    - comment
    - disabled
  MatchRecruitGetMatchRecruitUnauthorizedResponseBody:
    title: MatchRecruitGetMatchRecruitUnauthorizedResponseBody
    type: string
    example: Aliquid dignissimos.
  MatchRecruitListMatchRecruitmentUnauthorizedResponseBody:
    title: MatchRecruitListMatchRecruitmentUnauthorizedResponseBody
    type: string
    example: Quia vel aut dolor quisquam.
  UserBbmatchingUserResponseCollection:
    title: 'Mediatype identifier: application/vnd.bbmatching.user+json; type=collection;
      view=default'
    type: array
    items:
      $ref: '#/definitions/BbmatchingUserResponse'
    description: List UserResponseBody is the result type for an array of BbmatchingUserResponse
      (default view)
    example:
    - UserName: Chunichi Dragons
      email: chunichi@example.com
      email_verified: true
      phoneNumber: "+819012345678"
      photoURL: http://img.com
      user_id: XRQ85mtXnINISH25zfM0m5RlC6L2
    - UserName: Chunichi Dragons
      email: chunichi@example.com
      email_verified: true
      phoneNumber: "+819012345678"
      photoURL: http://img.com
      user_id: XRQ85mtXnINISH25zfM0m5RlC6L2
  UserDeleteCurrentUserUnauthorizedResponseBody:
    title: UserDeleteCurrentUserUnauthorizedResponseBody
    type: string
    description: Credentials are invalid
    example: Accusamus tenetur magni.
  UserGet Current UserResponseBody:
    title: 'Mediatype identifier: application/vnd.bbmatching.user+json; view=default'
    type: object
    properties:
      UserName:
        type: string
        description: チームの表示名
        example: Chunichi Dragons
      email:
        type: string
        description: チームのプライマリメールアドレス
        example: chunichi@example.com
        format: email
      email_verified:
        type: boolean
        description: ユーザーのプライマリメールアドレスが確認されているか。
        example: false
      phoneNumber:
        type: string
        description: チームのメイン電話番号
        example: "+819012345678"
        pattern: ^\+?[\d]{10,}$
      photoURL:
        type: string
        description: チームの写真URL
        example: http://img.com
      user_id:
        type: string
        description: firebaseのユーザーID
        example: XRQ85mtXnINISH25zfM0m5RlC6L2
        minLength: 28
        maxLength: 28
    description: Get Current UserResponseBody result type (default view)
    example:
      UserName: Chunichi Dragons
      email: chunichi@example.com
      email_verified: false
      phoneNumber: "+819012345678"
      photoURL: http://img.com
      user_id: XRQ85mtXnINISH25zfM0m5RlC6L2
    required:
    - user_id
    - UserName
    - email
    - phoneNumber
    - photoURL
    - email_verified
  UserGet JWTResponseBody:
    title: 'Mediatype identifier: application/vnd.bbmatching.jwt+json; view=default'
    type: object
    properties:
      JWT:
        type: string
        description: Json Web Token
        example: eyJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJ1c2VyaG9nZSIsImF1ZCI6ImF1ZGhvZ2UiLCJpc3MiOiJodHRwczpcL1wvZXhhbXBsZS5jb21cLyIsImV4cCI6MTQ1MjU2NTYyOCwiaWF0IjoxNDUyNTY1NTY4fQ.BfW2a1SMY1a8cjb7ATcJPwYSmB1P6l4oN2QRNtod-xCyochsB1ZurxNLqPOGFr7_Abqpk-_lOUaPOdL2jQ23T1DS1lmQgaEZgUXaJPAqGSJygANpv8ds07Q6pbX_XbFpJdoVCQHzP8MjbjW_ft2ZAAJzjZZEC6Hm0WUxKS6V0yRNmEUyV-Ljh6n337rtAoSTks2APdgW1hffyZMrptKKazG2m0V0LQRnu5lmWLTYwTZC8NdNJZNepPwQiGNZS0IcrdZhguGAL75ZGTMw9O_EC9gv_I_9I5NUwZk6LG1feEy3MawT0QaTEsF5n6yUKJ8ziuMXnUEsymGdKC-VYEbPyw
    description: Get JWTResponseBody result type (default view)
    example:
      JWT: eyJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJ1c2VyaG9nZSIsImF1ZCI6ImF1ZGhvZ2UiLCJpc3MiOiJodHRwczpcL1wvZXhhbXBsZS5jb21cLyIsImV4cCI6MTQ1MjU2NTYyOCwiaWF0IjoxNDUyNTY1NTY4fQ.BfW2a1SMY1a8cjb7ATcJPwYSmB1P6l4oN2QRNtod-xCyochsB1ZurxNLqPOGFr7_Abqpk-_lOUaPOdL2jQ23T1DS1lmQgaEZgUXaJPAqGSJygANpv8ds07Q6pbX_XbFpJdoVCQHzP8MjbjW_ft2ZAAJzjZZEC6Hm0WUxKS6V0yRNmEUyV-Ljh6n337rtAoSTks2APdgW1hffyZMrptKKazG2m0V0LQRnu5lmWLTYwTZC8NdNJZNepPwQiGNZS0IcrdZhguGAL75ZGTMw9O_EC9gv_I_9I5NUwZk6LG1feEy3MawT0QaTEsF5n6yUKJ8ziuMXnUEsymGdKC-VYEbPyw
  UserGet UserResponseBody:
    title: 'Mediatype identifier: application/vnd.bbmatching.user+json; view=default'
    type: object
    properties:
      UserName:
        type: string
        description: チームの表示名
        example: Chunichi Dragons
      email:
        type: string
        description: チームのプライマリメールアドレス
        example: chunichi@example.com
        format: email
      email_verified:
        type: boolean
        description: ユーザーのプライマリメールアドレスが確認されているか。
        example: false
      phoneNumber:
        type: string
        description: チームのメイン電話番号
        example: "+819012345678"
        pattern: ^\+?[\d]{10,}$
      photoURL:
        type: string
        description: チームの写真URL
        example: http://img.com
      user_id:
        type: string
        description: firebaseのユーザーID
        example: XRQ85mtXnINISH25zfM0m5RlC6L2
        minLength: 28
        maxLength: 28
    description: Get UserResponseBody result type (default view)
    example:
      UserName: Chunichi Dragons
      email: chunichi@example.com
      email_verified: true
      phoneNumber: "+819012345678"
      photoURL: http://img.com
      user_id: XRQ85mtXnINISH25zfM0m5RlC6L2
    required:
    - user_id
    - UserName
    - email
    - phoneNumber
    - photoURL
    - email_verified
  UserGetCurrentUserUnauthorizedResponseBody:
    title: UserGetCurrentUserUnauthorizedResponseBody
    type: string
    description: Credentials are invalid
    example: Dicta natus dolorem.
  UserGetJWTUnauthorizedResponseBody:
    title: UserGetJWTUnauthorizedResponseBody
    type: string
    description: Credentials are invalid
    example: Omnis dolorum quo excepturi vel dignissimos praesentium.
  UserGetUserUnauthorizedResponseBody:
    title: UserGetUserUnauthorizedResponseBody
    type: string
    description: Credentials are invalid
    example: Necessitatibus dolorem nemo voluptatem porro molestiae praesentium.
  UserListUserUnauthorizedResponseBody:
    title: UserListUserUnauthorizedResponseBody
    type: string
    description: Credentials are invalid
    example: Totam fugit eaque possimus reprehenderit.
  UserUpdate Current UserResponseBody:
    title: 'Mediatype identifier: application/vnd.bbmatching.user+json; view=default'
    type: object
    properties:
      UserName:
        type: string
        description: チームの表示名
        example: Chunichi Dragons
      email:
        type: string
        description: チームのプライマリメールアドレス
        example: chunichi@example.com
        format: email
      email_verified:
        type: boolean
        description: ユーザーのプライマリメールアドレスが確認されているか。
        example: false
      phoneNumber:
        type: string
        description: チームのメイン電話番号
        example: "+819012345678"
        pattern: ^\+?[\d]{10,}$
      photoURL:
        type: string
        description: チームの写真URL
        example: http://img.com
      user_id:
        type: string
        description: firebaseのユーザーID
        example: XRQ85mtXnINISH25zfM0m5RlC6L2
        minLength: 28
        maxLength: 28
    description: Update Current UserResponseBody result type (default view)
    example:
      UserName: Chunichi Dragons
      email: chunichi@example.com
      email_verified: false
      phoneNumber: "+819012345678"
      photoURL: http://img.com
      user_id: XRQ85mtXnINISH25zfM0m5RlC6L2
    required:
    - user_id
    - UserName
    - email
    - phoneNumber
    - photoURL
    - email_verified
  UserUpdateCurrentUserRequestBody:
    title: UserUpdateCurrentUserRequestBody
    type: object
    properties:
      UserName:
        type: string
        description: チームの表示名
        example: Chunichi Dragons
      email:
        type: string
        description: チームのプライマリメールアドレス
        example: chunichi@example.com
        format: email
      phoneNumber:
        type: string
        description: チームのメイン電話番号
        example: "+819012345678"
        pattern: ^\+?[\d]{10,}$
      photoURL:
        type: string
        description: チームの写真URL
        example: http://img.com
      user_id:
        type: string
        description: firebaseのユーザーID
        example: XRQ85mtXnINISH25zfM0m5RlC6L2
        minLength: 28
        maxLength: 28
    example:
      UserName: Chunichi Dragons
      email: chunichi@example.com
      phoneNumber: "+819012345678"
      photoURL: http://img.com
      user_id: XRQ85mtXnINISH25zfM0m5RlC6L2
  UserUpdateCurrentUserUnauthorizedResponseBody:
    title: UserUpdateCurrentUserUnauthorizedResponseBody
    type: string
    description: Credentials are invalid
    example: Deserunt alias dolores aut.
securityDefinitions:
  jwt_header_Authorization:
    type: apiKey
    description: |
      Secures endpoint by requiring a valid JWT token retrieved via the firebase.
      **Security Scopes**:
    name: Authorization
    in: header
